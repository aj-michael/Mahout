<?xml version="1.0" encoding="UTF-8"?>
<!-- Copyright [2012] [Datasalt Systems S.L.] Licensed under the Apache License, Version 2.0 (the "License"); you may not 
    use this file except in compliance with the License. You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 
    Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an "AS 
    IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language 
    governing permissions and limitations under the License. -->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

    <!-- POM Relationships -->

    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.sonatype.oss</groupId>
        <artifactId>oss-parent</artifactId>
        <version>7</version>
    </parent>
    <groupId>com.datasalt.pangool</groupId>
    <artifactId>pangool-top-level</artifactId>
    <version>0.71-SNAPSHOT</version>

    <modules>
        <module>core</module>
        <module>examples</module>
    </modules>

    <properties>
        <hadoop.1.version>0.20.2</hadoop.1.version>
        <hadoop.2.version>2.0.0-alpha</hadoop.2.version>
        <jackson.version>1.7.9</jackson.version>
        <avro.version>1.6.3</avro.version>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    </properties>

    <dependencies />

    <!-- ///////////////// -->

    <!-- Build Settings -->

    <profiles>

        <profile>
            <id>mr1</id>
            <properties>
                <hadoop.version>1</hadoop.version>
            </properties>
            <dependencies>
                <dependency>
                    <groupId>org.apache.commons</groupId>
                    <artifactId>commons-io</artifactId>
                    <version>1.3.2</version>
                </dependency>
                <dependency>
                    <groupId>org.apache.hadoop</groupId>
                    <artifactId>hadoop-core</artifactId>
                    <version>${hadoop.1.version}</version>
                    <scope>provided</scope>
                </dependency>
            </dependencies>
            <build>
                <pluginManagement>
                    <plugins>
                        <plugin>
                            <artifactId>maven-jar-plugin</artifactId>
                            <executions>
                                <execution>
                                    <id>default-jar</id>
                                    <configuration>
                                        <classifier>mr${hadoop.version}</classifier>
                                    </configuration>
                                </execution>
                            </executions>
                        </plugin>
                    </plugins>
                </pluginManagement>
            </build>
        </profile>

        <profile>
            <id>cdh4</id>
            <properties>
                <hadoop.version>2</hadoop.version>
            </properties>
            <dependencies>
                <dependency>
                    <groupId>commons-io</groupId>
                    <artifactId>commons-io</artifactId>
                    <version>2.1</version>
                </dependency>
                <dependency>
                    <groupId>org.apache.hadoop</groupId>
                    <artifactId>hadoop-core</artifactId>
                    <version>2.0.0-mr1-cdh4.3.0</version>
                </dependency>
                <dependency>
                    <groupId>org.apache.hadoop</groupId>
                    <artifactId>hadoop-common</artifactId>
                    <version>2.0.0-cdh4.3.0</version>
                    <type>jar</type>
                    <optional>false</optional>
                </dependency>
            </dependencies>
            <repositories>
                <repository>
                    <id>cloudera</id>
                    <url>https://repository.cloudera.com/artifactory/cloudera-repos/</url>
                </repository>
            </repositories>
        </profile>

        <profile>
            <!-- Enable it for making Pangool compatible with YARN and MR2 -->
            <id>mr2</id>
            <properties>
                <hadoop.version>2</hadoop.version>
            </properties>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <dependencies>
                <dependency>
                    <groupId>org.apache.commons</groupId>
                    <artifactId>commons-io</artifactId>
                    <version>1.3.2</version>
                </dependency>
                <dependency>
                    <groupId>org.apache.hadoop</groupId>
                    <artifactId>hadoop-mapreduce-client-core</artifactId>
                    <version>${hadoop.2.version}</version>
                    <scope>provided</scope>
                </dependency>
                <dependency>
                    <groupId>org.apache.hadoop</groupId>
                    <artifactId>hadoop-mapreduce-client-jobclient</artifactId>
                    <version>${hadoop.2.version}</version>
                    <scope>provided</scope>
                </dependency>
                <dependency>
                    <groupId>org.apache.hadoop</groupId>
                    <artifactId>hadoop-common</artifactId>
                    <version>${hadoop.2.version}</version>
                    <scope>provided</scope>
                </dependency>
                <dependency>
                    <groupId>org.apache.hadoop</groupId>
                    <artifactId>hadoop-hdfs</artifactId>
                    <version>${hadoop.2.version}</version>
                    <scope>provided</scope>
                </dependency>
                <!-- Copied from Pig dependencies, unit test fails otherwise -->
                <dependency>
                    <groupId>com.google.protobuf</groupId>
                    <artifactId>protobuf-java</artifactId>
                    <version>3.16.3</version>
                    <scope>provided</scope>
                </dependency>
            </dependencies>
        </profile>

    </profiles>

    <packaging>pom</packaging>
    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-eclipse-plugin</artifactId>
                <version>2.9</version>
                <configuration>
                    <projectNameTemplate>[artifactId]</projectNameTemplate>
                    <manifest />
                    <downloadSources>false</downloadSources>
                    <downloadJavadocs>false</downloadJavadocs>
                    <additionalBuildcommands>
                        <buildcommand>net.sf.eclipsecs.core.CheckstyleBuilder</buildcommand>
                    </additionalBuildcommands>
                    <additionalProjectnatures>
                        <projectnature>net.sf.eclipsecs.core.CheckstyleNature</projectnature>
                    </additionalProjectnatures>
                    <additionalConfig>
                        <file>
                            <name>.checkstyle</name>
                            <content>
                                <![CDATA[
                                <?xml version="1.0" encoding="UTF-8"?>
                                <fileset-config file-format-version="1.2.0" simple-config="true" sync-formatter="true">
                                    <fileset name="all" enabled="true" check-config-name="pangool" local="false">
                                        <file-match-pattern match-pattern="." include-pattern="true" />
                                    </fileset>
                                    <filter name="FileTypesFilter" enabled="true">
                                        <filter-data value="java" />
                                    </filter>
                                    <filter name="NonSrcDirs" enabled="true" />
                                </fileset-config>
                                ]]>
                            </content>
                        </file>
                    </additionalConfig>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>2.12</version>
                <configuration>
                    <includes>
                        <!-- Pangool naming convention for JUnit tests -->
                        <include>**/Test**</include>
                    </includes>
                    <excludes>
                        <!-- A few innner classes are not to be tested -->
                        <exclude>**/*$*</exclude>
                        <!-- exclude the generated classes under apache.avro.test, some of these match **/Test** and are 
                            not JUnit tests -->
                        <!--exclude>**/apache/avro/test/**</exclude -->
                    </excludes>
                    <enableAssertions>false</enableAssertions>
                    <!-- some IPC tests hang if not run in a separate JVM -->
                    <forkMode>always</forkMode>
                    <!-- TestSpecificCompiler instantiates a Java compiler to test output results, this does not work with 
                        a manifest-only-jar to set the classpath for the javac. This may cause problems on some platforms. See http://maven.apache.org/plugins/maven-surefire-plugin/examples/class-loading.html 
                        for more information. -->
                    <useManifestOnlyJar>false</useManifestOnlyJar>
                    <!-- configures unit test standard error and standard out to go to a file per test rather than the console. -->
                    <redirectTestOutputToFile>true</redirectTestOutputToFile>
                    <failIfNoTests>false</failIfNoTests>
                    <!--<systemPropertyVariables> <test.dir>${project.basedir}/target</test.dir> </systemPropertyVariables> -->
                </configuration>
            </plugin>
            <!-- <plugin> <groupId>org.apache.maven.plugins</groupId> <artifactId>maven-checkstyle-plugin</artifactId> <version>${checkstyle-plugin.version}</version> 
                <configuration> <configLocation>checkstyle.xml</configLocation> </configuration> -->
            <!-- Runs by default in the verify phase (mvn verify or later in the build cycle) the 'check' goal will fail 
                the build if it does not pass. "mvn checkstyle:check" will do this alone, or "mvn checkstyle:checkstyle" will report but 
                not break -->
            <!-- <executions> <execution> <id>checkstyle-check</id> <phase>test</phase> <goals> <goal>checkstyle</goal> </goals> 
                </execution> </executions> </plugin> -->
            <!-- <plugin> <groupId>org.apache.maven.plugins</groupId> <artifactId>maven-gpg-plugin</artifactId> <executions> 
                <execution> <id>sign-artifacts</id> <phase>verify</phase> <goals> <goal>sign</goal> </goals> </execution> </executions> </plugin> -->
            <!-- <plugin> <artifactId>maven-jar-plugin</artifactId> <executions> -->
            <!-- <execution> <phase>package</phase> <goals> <goal>jar</goal> </goals> <configuration> <classifier>mr${hadoop.version}</classifier> 
                </configuration> </execution> -->
            <!-- <execution> <id>default-jar</id> <configuration> <classifier>mr${hadoop.version}</classifier> </configuration> 
                </execution> </executions> </plugin> -->
        </plugins>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>3.1</version>
                </plugin>
            </plugins>
        </pluginManagement>
    </build>

    <!-- ////////////// -->

    <!-- Project Information -->

    <name>Pangool</name>
    <url>http://pangool.net</url>
    <inceptionYear />
    <licenses>
        <license>
            <name>The Apache Software License, Version 2.0</name>
            <url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
            <distribution>repo</distribution>
        </license>
    </licenses>
    <description>Tuple MapReduce for Hadoop: Hadoop API made easy</description>
    <organization>
        <name>Datasalt Systems S.L.</name>
        <url>http://www.datasalt.com</url>
    </organization>
    <developers>
        <developer>
            <id>ivan</id>
            <name>Ivan De Prado</name>
            <email>ivan@datasalt.com</email>
            <organization>Datasalt Systems S.L.</organization>
            <organizationUrl>http://www.datasalt.com</organizationUrl>
            <roles>
                <role>developer</role>
            </roles>
            <timezone>+1</timezone>
        </developer>
        <developer>
            <id>pere</id>
            <name>Pere Ferrera</name>
            <email>pere@datasalt.com</email>
            <organization>Datasalt Systems S.L.</organization>
            <organizationUrl>http://www.datasalt.com</organizationUrl>
            <roles>
                <role>developer</role>
            </roles>
            <timezone>+1</timezone>
        </developer>
        <developer>
            <id>epalace</id>
            <name>Eric Palacios</name>
            <email>epalacios@datasalt.com</email>
            <organization>Datasalt Systems S.L.</organization>
            <organizationUrl>http://www.datasalt.com</organizationUrl>
            <roles>
                <role>developer</role>
            </roles>
            <timezone>+1</timezone>
        </developer>
    </developers>

    <!-- /////////////////// -->

    <!-- Build Environment -->

    <!-- Environment Information -->

    <mailingLists />

    <scm>
        <url>https://github.com/datasalt/pangool</url>
        <connection>scm:git:git@github.com:datasalt/pangool.git</connection>
        <developerConnection>scm:git:git@github.com:datasalt/pangool.git</developerConnection>
    </scm>

    <issueManagement>
        <system>github</system>
        <url>https://github.com/datasalt/pangool</url>
    </issueManagement>

    <ciManagement>
        <system>Jenkins CI</system>
        <url>http://clinker.datasalt.com/jenkins</url>
    </ciManagement>

    <!-- /////////////////////// -->

    <!-- Maven Environment -->

    <repositories>
        <repository>
            <id>apache-snapshots</id>
            <releases>
                <enabled>false</enabled>
            </releases>
            <snapshots>
                <enabled>true</enabled>
            </snapshots>
            <url>http://repository.apache.org/content/groups/snapshots</url>
        </repository>
    </repositories>

    <pluginRepositories />

    <distributionManagement>
        <snapshotRepository>
            <id>datasalt-snapshots</id>
            <url>http://clinker.datasalt.com/nexus/content/repositories/snapshots</url>
        </snapshotRepository>
    </distributionManagement>

    <!-- ///////////////// -->

    <!-- ///////////////// -->
</project>
